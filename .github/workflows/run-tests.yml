name: Unit Tests

on:
  push:
    branches:
      - dev
      - pipeline
  pull_request:
    branches:
      - "*"
  schedule:
    - cron: '0 0 * * *'

permissions:
  contents: read

jobs:
  tests:
    runs-on: ${{ matrix.operating-systems }}
    timeout-minutes: 15
    env:
      COMPOSER_NO_INTERACTION: 1
      XDEBUG_MODE: coverage

    strategy:
      matrix:
        php: [ 8.2]
        laravel: [ ^10 ]
        dependency-version: [ prefer-stable ]
        exclude:
          - php: 8.0
        operating-systems: [ubuntu-latest]

    name: PHP Version ${{ matrix.php }} - Laravel Version ${{ matrix.laravel }} - ${{ matrix.dependency-version }}

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: artwork_tools
        ports:
          - 3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=5

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: curl, fileinfo, gd, intl, mbstring, openssl, pdo, pdo_mysql, tokenizer, zip, xdebug

      - name: Composer Install
        run: composer install

      - name: Set Testing Environment
        run: |
          cp .env.example .env.testing
          sed -i "s|^\(APP_ENV=\s*\).*$|\1testing|" .env.testing
          sed -i "s|^\(DB_HOST=\s*\).*$|\1127.0.0.1|" .env.testing
          sed -i "s|^\(DB_PORT=\s*\).*$|\1${{ job.services.mysql.ports['3306'] }}|" .env.testing
          sed -i "s|^\(DB_DATABASE=\s*\).*$|\1artwork_tools|" .env.testing
          sed -i "s|^\(DB_USERNAME=\s*\).*$|\1root|" .env.testing
          sed -i "s|^\(DB_PASSWORD=\s*\).*$|\1root|" .env.testing

      - name: Setup Application
        run: |
          php artisan key:generate --env=testing
          php artisan optimize --env=testing
          php artisan migrate:fresh --env=testing
          php artisan db:seed --class=ProductionDatabaseSeeder --env=testing

      - name: Running Test
        run: vendor/bin/pest --colors=always --coverage --min=70
